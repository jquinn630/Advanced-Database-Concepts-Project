{
  "name": "jdbc",
  "version": "0.0.6",
  "description": "Node Module JDBC wrapper",
  "main": "index.js",
  "dependencies": {
    "java": "~0.3.1",
    "underscore": "~1.6.0",
    "promise": "~4.0.0"
  },
  "devDependencies": {
    "nodeunit": "~0.8.6"
  },
  "scripts": {
    "pretest": "java -cp drivers/hsqldb.jar org.hsqldb.server.Server --database.0 file:mydb --dbname.0 xdb >test/hsqldb.log 2>&1 &",
    "test": "nodeunit test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/CraZySacX/node-jdbc.git"
  },
  "directories": {
    "doc": ".",
    "lib": "lib"
  },
  "keywords": [
    "node",
    "jdbc",
    "wrapper"
  ],
  "engines": {
    "node": ">=0.8.0"
  },
  "author": {
    "name": "Jason Ozias",
    "email": "jason.g.ozias@gmail.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "node-jdbc\n=========\n\nJDBC Wrapper for node.js\n\nLatest Version\n--------------\n0.0.6\n\n## Status\n[![Build Status](https://travis-ci.org/CraZySacX/node-jdbc.png)](https://travis-ci.org/CraZySacX/node-jdbc)\n[![endorse](https://api.coderwall.com/crazysacx/endorsecount.png)](https://coderwall.com/crazysacx)\n\nInitialize\n----------\n```javascript\nvar jdbc = require('jdbc');\n\nvar config = {\n  libpath: __dirname + 'path/to/jdbc.jar',\n  drivername: 'com.java.driverclass',\n  url: 'url/to/database'\n};\n\njdbc.initialize(config);\njdbc.on(\"init\", function(err, res) {\n  if (err) {\n    console.log(err);\n  }\n});\n```\n\nOpen Connection, Execute Queries, Close\n---------------------------------------\n```javascript\nvar queryHandler = function(err, results) {\n  if (err) {\n    console.log(err);\n  } else if (results) {\n    console.log(results);\n  }\n};\n\njdbc.open();\njdbc.on(\"open\", function(err, conn) {\n  if (conn) {\n    jdbc.on(\"executeQuery\", queryHandler);\n    jdbc.executeQuery(\"SELECT * FROM table\");\n\n    jdbc.executeUpdate(\"INSERT INTO table VALUES (value)\");\n    jdbc.executeUpdate(\"UPDATE table SET column = value\");\n    jdbc.executeUpdate(\"DELETE FROM table WHERE column = value\");\n  }\n});\n\njdbc.close();\n```\n\nexecuteQuery() vs executeUpdate()\n---------------------------------\nAs in standard JDBC:\n\nexecuteQuery() returns a result set (rset) and is therefore suited for SELECT commands.\n\nexecuteUpdate() returns the number of rows modified, and is suited for INSERT, UPDATE, DELETE commands.\n",
  "bugs": {
    "url": "https://github.com/CraZySacX/node-jdbc/issues"
  },
  "_id": "jdbc@0.0.6",
  "dist": {
    "shasum": "1709aa702bd3005b547b1a5bc2b7a6b6f42acae4"
  },
  "_from": "jdbc@",
  "_resolved": "https://registry.npmjs.org/jdbc/-/jdbc-0.0.6.tgz"
}
